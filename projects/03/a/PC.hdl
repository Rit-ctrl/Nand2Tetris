// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
 
    Mux16(a=in,b=false,sel=reset,out=s1);  //set to 0 or in
    
    Or(a=reset,b=load,out=c1);       //check if any of reset or load is set
    Mux16(a=outtplusone,b=s1,sel=c1,out=regval); //if so change the register value else leave the predetermined value from previous state to continue
    
    Or(a=c1,b=inc,out=c2); //check if load or inc or reset flag are set
    
    
    Register(in=regval,load=c2,out=outt,out=out); //if yes use the new value else use the predetermined value from previous state 
    
    Inc16(in=outt,out=i);
    Mux16(a=outt,b=i,sel=inc,out=outtplusone); //out_t_plus_one is the determined register's value for next state unless it is overwritten by any flags,Here we are incrementing the value if inc is set else just passing over the current output as such 
    
}
